/*
-------------------------------------- Module Pattern -------------------------------------------
In JavaScript, the Module pattern is used to further emulate the concept of classes in such a way that we're able to include 
both public/private methods and variables inside a single object, thus shielding particular parts from the global scope.
*/


var basketModule = (function () {
    // private members
    var basket = [];
    
    function addItem (item) {
        if (typeof item === "object") {
            basket.push(item);
        }
        else {
            console.log("item could'nt be added");
        }
    }
    
    function getItemCount () {
        console.log("Total items: " + basket.length);
    }
    
    function totalPrice () {
        var price = 0;
        var i = 0;
        while (i < basket.length) {
            price += basket[i].price;
            i++;
        }
        console.log("Total Price: " + price);
    }
    
    // public API
    return {
        add: addItem,
        totalPrice: totalPrice,
        itemCount: getItemCount 
    } 
})();

basketModule.add({name: "mango", price: 100});
basketModule.add({name: "grape", price: 200});
basketModule.itemCount();
basketModule.totalPrice();
